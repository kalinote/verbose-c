// --- 1. 安全的拓宽转换 (Widening Conversions) ---
builtin_println("--- Widening Conversions ---");
float f_from_i = (float)123;
builtin_println(f_from_i); // 期望输出: 123.0

long l_from_i = (long)456;
builtin_println(l_from_i); // 期望输出: 456


// --- 2. 可能丢失信息的收窄转换 (Narrowing Conversions) ---
builtin_println("\n--- Narrowing Conversions ---");
int i_from_f = (int)3.14159;
builtin_println(i_from_f); // 期望输出: 3 (小数部分被截断)

int i_from_d = (int)99.99;
builtin_println(i_from_d); // 期望输出: 99

char c_from_i = (char)65;
builtin_println(c_from_i);  // 期望输出: 65


// --- 3. 转换为字符串 ---
builtin_println("\n--- String Conversions ---");
string s_from_i = (string)789;
builtin_println(s_from_i); // 期望输出: "789"

string s_from_f = (string)-123.45;
builtin_println(s_from_f); // 期望输出: "-123.45"

string s_from_b = (string)true;
builtin_println(s_from_b); // 期望输出: "true"


// --- 4. 转换为布尔值 ---
builtin_println("\n--- Boolean Conversions ---");
builtin_println((bool)1);      // 期望输出: true
builtin_println((bool)0);      // 期望输出: false
builtin_println((bool)-1);     // 期望输出: true
builtin_println((bool)"");     // 期望输出: false
builtin_println((bool)"abc");  // 期望输出: true


// --- 5. 在表达式中使用 ---
builtin_println("\n--- Usage in Expressions ---");
int result = (int)5.5 + 10; // 5 + 10
builtin_println(result); // 期望输出: 15

builtin_println("Result is: " + (string)result); // 期望输出: "Result is: 15"


// --- 6. 运行时错误测试 (可选，取消注释以测试) ---
builtin_println("\n--- Runtime Error Test ---");
int error_cast = (int)"hello"; // 应该会抛出一个运行时错误
