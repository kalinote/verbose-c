// 基础类
class Creature {
    string id;

    void __init__(string id) {
        this.id = id;
        builtin_println("Creature __init__ called for " + this.id);
    }

    void identify() {
        builtin_println("I am a creature with id: " + this.id);
    }
}

// 中间类
class Animal extends Creature {
    string name;

    void __init__(string name, string id) {
        super.__init__(id);
        this.name = name;
        builtin_println("Animal __init__ called for " + this.name);
    }

    // 覆盖 identify 并调用 super
    void identify() {
        super.identify();
        builtin_println("...and I am an animal named: " + this.name);
    }
}

// 派生类
class Dog extends Animal {
    string breed;

    void __init__(string name, string breed) {
        super.__init__(name, "dog_id_01");
        this.breed = breed;
        builtin_println("Dog __init__ called for breed: " + this.breed);
    }

    // 覆盖 identify 并调用 super
    void identify() {
        super.identify();
        builtin_println("...and I am a dog of breed: " + this.breed);
    }
}

void main() {
    builtin_println("--- Creating a Dog ---");
    Dog my_dog = new Dog("Buddy", "Golden Retriever");
    
    builtin_println("\n--- Identifying the Dog ---");
    my_dog.identify();
}

main();
